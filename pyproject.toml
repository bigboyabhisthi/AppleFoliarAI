[tool.poetry]
name = "Apple Foliar AI"
authors = ["Smaranjit Ghose"]
version = "0.0.1"
description = "Using Artificial Intelligence to detect foliar diseases in apples"
license = "BSD 3-Clause"
readme = "README.MD"
homepage = "https://github.com/smaranjitghose/AppleFoliarAI"
repository = "https://github.com/smaranjitghose/AppleFoliarAI"
documentation = "https://github.com/smaranjitghose/AppleFoliarAI"
keywords = ["Apple Foliar AI", "Deep Learning", "Plant Pathology"]


[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
pre-commit = "^2.12.1"
invoke = "^1.5.0"
flake8 = "^3.9.1"
flakehell = "^0.9.0"
flake8-builtins = "^1.5.3"
flake8-blind-except = "^0.2.0"
flake8-logging-format = "^0.6.0"
flake8-bugbear = "^21.4.3"
flake8-annotations = "^2.6.2"
flake8-docstrings = "^1.6.0"
flake8-bandit = "^2.1.2"
darglint = "^1.8.0"
isort = "^5.8.0"
black = "^20.8b1"
pytest = "^6.2.3"
xdoctest = "^0.15.4"


[tool.flakehell]
exclude = ["README.rst", "README.md"]
format = "grouped"
# show line of source code in output
show_source = true
max_line_length = 100
docstring-convention = "google"
extended_default_ignore = []

[tool.flakehell.plugins]
# include everything in pyflakes except F401
pyflakes = ["+*", "-F401"]
pycodestyle = ["+*"]
mccabe = ["+*"]
"flake8-*" = ["+*"]
darglint = ["+*"]
pep8-naming = ["+*"]
pylint = ["+*"]
flake8-bandit = ["+*", "-S322"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-darglint = ["+*"]
flake8-docstrings = ["+*"]
flake8-eradicate = ["+*"]
flake8-isort = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-spellcheck = ["+*"]


[tool.black]
line-length = 10
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
include_trailing_comma = true
known_third_party = []

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
